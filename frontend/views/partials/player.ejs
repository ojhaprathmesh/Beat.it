<footer class="player">
    <% if (song) { %>
        <div class="player-albuminfo">
            <div class="player-songcover">
                <img src="<%= song.albumCover %>" alt="<%= song.albumCover %>" width="75px" height="75px"
                    style="border-radius: 10px">
            </div>

            <div class="player-songdetails font-inter" style="font-weight: 500;">
                <div class="player-songname">
                    <%= song.title %>
                </div>
                <div class="player-artistname">
                    <%= song.artist %>
                </div>
            </div>

            <div class="like-btn" data-song-id="<%= song.id %>">
                <i class="fas fa-heart" style="font-size: larger;">
                    <label>
                        <input type="checkbox" class="like-check" />
                    </label>
                </i>
            </div>
        </div>

        <div class="playback">
            <audio id="songPlayer" data-song-id="<%= song.id %>">
                <source src="<%= song.file %>" type="audio/mpeg">
            </audio>
            <div class="music-progress-bar">
                <span class="player-current-time">0:00</span>
                <label for="seekMusic" id="seekMusicLabel" class="seekbar-label">.</label>
                <input type="range" id="seekMusic" class="seekbar" min="0" max="100" value="0" step="0.01">
                <span class="player-duration"><%= song.duration || "0:00" %></span>
            </div>

            <div class="controls">
                <i class="fas fa-random shuffle"></i> <!-- Shuffle -->
                <i class="fas fa-step-backward reverse"></i> <!-- Reverse -->
                <i class="fas fa-play play" style="display: none; padding-right: 4px;"></i> <!-- Play -->
                <i class="fas fa-pause pause" style="display: block; padding: 0 7px;"></i> <!-- Pause -->
                <i class="fas fa-step-forward forward"></i> <!-- Forward -->
                <i class="fa-solid fa-repeat repeat">
                    <p style="
                        display: none;
                        color: var(--white);
                        position: absolute;
                        left: 811px;
                        bottom: 24px;
                        font-size: 12px;
                        font-weight: bold;
                        font-family: 'Segoe UI',serif;
                        cursor: pointer;
                    ">1
                    </p>
                </i> <!-- Repeat -->
            </div>
        </div>

        <div class="other-controls">
            <div class="song-queue"> <!-- Song Queue (formerly burger-menu) -->
                <i class="fas fa-list"></i>
            </div>
            <div class="volume">
                <i class="fas fa-volume-mute" id="volume-mute" style="display: none;"></i>
                <i class="fas fa-volume-down" id="volume-one" style="display: none;"></i>
                <i class="fas fa-volume" id="volume-two" style="display: none; filter: invert(1)">
                    <img src="/assets/home/volume.png" alt="" width="20px">
                </i>
                <i class="fas fa-volume-up" id="volume-three" style="display: block;"></i>
                <div class="volume-control-bar">
                    <label for="seekVolume" id="seekVolumeLabel" class="seekbar-label">.</label>
                    <input type="range" id="seekVolume" min="0" max="100" value="50" step="1">
                </div>
            </div>
        </div>
        <% } else { %>
            <p>No song data available to render the player.</p>
            <% } %>
</footer>

<script>
    // Global variable to check for refresh
    window.checkForRefresh = async function(endpoint, params = {}) {
        try {
            // Build the query string if params are provided
            const queryString = Object.keys(params).length > 0 
                ? '?' + new URLSearchParams(params).toString() 
                : '';
                
            // Make a fetch request to check for updates
            const response = await fetch(`${endpoint}${queryString}`);
            if (response.ok) {
                const data = await response.json();
                
                // If the server indicates a refresh is needed, reload the page
                if (data.shouldRefresh) {
                    console.log('Server indicated a page refresh is needed');
                    location.reload();
                    return true;
                }
            }
            return false;
        } catch (error) {
            console.error('Error checking for refresh:', error);
            return false;
        }
    };
    
    // Function to update like button state
    window.updateFavoriteStatus = async function(songId) {
        const likeButtons = document.querySelectorAll(`.like-btn[data-song-id="${songId}"]`);
        
        if (likeButtons.length > 0) {
            try {
                const response = await fetch(`/api/user/check-favorite/${songId}`);
                if (response.ok) {
                    const data = await response.json();
                    
                    // Update all like buttons for this song
                    likeButtons.forEach(button => {
                        const checkbox = button.querySelector('.like-check');
                        if (checkbox) {
                            checkbox.checked = data.isFavorite;
                        }
                    });
                }
            } catch (error) {
                console.error('Error checking favorite status:', error);
            }
        }
    };
</script>